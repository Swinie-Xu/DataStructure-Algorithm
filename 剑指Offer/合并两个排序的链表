/*
struct ListNode {
	int val;
	struct ListNode *next;
	ListNode(int x) :
			val(x), next(NULL) {
	}
};*/
class Solution {
public:
    // 用的最简单的方式实现合并两个链表
    // 就是比较两个指向未比较部分头结点的大小
    ListNode* Merge(ListNode* pHead1, ListNode* pHead2) {
        ListNode* head = nullptr;
        if(!pHead1 && !pHead2) return head;
        if(!pHead1) return pHead2;
        if(!pHead2) return pHead1;
        if(pHead1->val <= pHead2->val)
        {
            head = pHead1;
            pHead1 = pHead1->next;
        }
        else
        {
            head = pHead2;
            pHead2 = pHead2->next;
        }
        ListNode* temp = head;
        while(pHead1 && pHead2)
        {
            if(pHead1->val <= pHead2->val)
            {
                temp->next = pHead1;
                temp = pHead1;
                pHead1 = pHead1->next;
            }
            else
            {
                temp->next = pHead2;
                temp = pHead2;
                pHead2 = pHead2->next;
            }
        }
        if(pHead1)
        {
            temp->next = pHead1;
        }
        if(pHead2)
        {
            temp->next = pHead2;
        }
        
        return head;
    }
};
